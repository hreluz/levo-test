{"version":3,"sources":["components/ArticleGridItem.js","components/ArticleGrid.js","hooks/useFetchArticles.js","components/Header.js","TestApp.js","reportWebVitals.js","index.js"],"names":["ArticleGridItem","date","title","paragraph","color","titleSubSstring","length","substring","paragraphSubSstring","className","style","backgroundColor","type","ArticleGrid","useState","data","loading","state","setstate","getGifts","a","fetch","resp","json","items","useEffect","then","useFetchArticles","articles","first3Articles","slice","moreArticles","showMoreArticles","setshowMoreArticles","map","article","id","onClick","Header","TestApp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mMA8BeA,EA5BS,SAAC,GAAiD,IAAhDC,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,UAAkC,IAAvBC,aAAuB,MAAf,UAAe,EAE/DC,EAAkBH,EAAMI,OAAS,GAAf,UAAwBJ,EAAMK,UAAU,EAAG,IAA3C,QAAwDL,EAC1EM,EAAsBL,EAAUG,OAAS,IAAnB,UAA6BH,EAAUI,UAAU,EAAG,KAApD,QAAiEJ,EAE7F,OACI,mCACA,sBAAKM,UAAU,gCAAgCC,MAAO,CAACC,gBAAgB,GAAD,OAAKP,IAA3E,UACI,uBAAOK,UAAU,YAAjB,SAA+BR,IAC/B,6BAAYQ,UAAU,kBAAtB,UACI,4BAAIJ,IACJ,qBAAKI,UAAU,+BAAf,SACI,gCAAQD,MAEZ,wBAAQI,KAAK,SAASH,UAAU,6BAAhC,gC,uBCZHI,EAAc,WAAO,IAAD,ECFD,WAAO,IAAD,EAERC,mBAAS,CAC/BC,KAAM,GACNC,SAAS,IAJqB,mBAE3BC,EAF2B,KAEpBC,EAFoB,KAO5BC,EAAQ,uCAAI,gCAAAC,EAAA,sEAGKC,MAHL,uEAGRC,EAHQ,gBAIQA,EAAKC,OAJb,uBAIPC,EAJO,EAIPA,MAJO,kBAMPA,GANO,2CAAJ,qDAiBd,OARAC,qBAAU,WACNN,IACKO,MAAM,SAAAF,GAAK,OAAIN,EAAS,CACrBH,KAAMS,EACNR,SAAS,SAElB,IAEIC,EDrB0BU,GAArBC,EADiB,EACtBb,KAAeC,EADO,EACPA,QAEhBa,EAAiBD,EAASE,MAAM,EAAE,GAClCC,EAAeH,EAASE,MAAM,EAAGF,EAAStB,QAJnB,EAKmBQ,oBAAS,GAL5B,mBAKtBkB,EALsB,KAKJC,EALI,KAW7B,OACI,gCACMjB,GAAW,yCAEb,qBAAKP,UAAU,eAAf,SAEQoB,EAAeK,KAAK,SAAAC,GAAO,OACvB,cAAC,EAAD,CAEA/B,MAAO+B,EAAQ/B,MACfH,KAAMkC,EAAQlC,KACdC,MAAOiC,EAAQjC,MACfC,UAAWgC,EAAQhC,WAJdgC,EAAQC,SAUzB,qBAAK3B,UAAU,eAAf,SAEQuB,GACAD,EAAaG,KAAK,SAAAC,GAAO,OACrB,cAAC,EAAD,CAEA/B,MAAO+B,EAAQ/B,MACfH,KAAMkC,EAAQlC,KACdC,MAAOiC,EAAQjC,MACfC,UAAWgC,EAAQhC,WAJdgC,EAAQC,UAWpBpB,IAAYgB,GACT,qBAAKvB,UAAU,MAAf,SACI,qBAAKA,UAAU,kBAAf,SACA,wBAAWG,KAAK,SACJyB,QA1Cf,WACbJ,GAAqBD,IA0COvB,UAAU,yBAFtB,+BElCT6B,EAhBA,SAAC,GAAwB,IAAvBpC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,UACpB,OACI,qBAAKM,UAAU,WAAf,SACI,sBAAKA,UAAU,MAAf,UACI,oBAAIA,UAAU,cAAd,SAA8BP,IAC9B,4BAAKC,UCSNoC,EAbC,WAKZ,OACI,sBAAK9B,UAAU,YAAf,UACI,cAAC,EAAD,CAAQP,MALF,mBAKgBC,UAJZ,6JAKV,cAAC,EAAD,QCCGqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ac04e3c0.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nconst ArticleGridItem = ({date, title, paragraph, color = '#007bff'}) => {\n\n    const titleSubSstring = title.length > 40 ? `${ title.substring(0, 40)} ...`  : title;\n    const paragraphSubSstring = paragraph.length > 300 ? `${ paragraph.substring(0, 300)} ...` : paragraph;\n\n    return (\n        <>\n        <div className=\"card text-white text-left p-3\" style={{backgroundColor: `${color}` }}>\n            <small className=\"text-left\">{ date }</small>\n            <blockquote className=\"blockquote mb-0\">\n                <p>{titleSubSstring}</p>\n                <div className=\"blockquote-footer text-white\">\n                    <small>{paragraphSubSstring}</small>\n                </div>\n                <button type=\"button\" className=\"btn btn-outline-light mt-4\">Read More</button>\n            </blockquote>\n        </div>\n        </>\n    );\n}\n\nArticleGridItem.propTypes = {\n    date: PropTypes.string.isRequired,\n    paragraph: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    color: PropTypes.string\n}\n\nexport default ArticleGridItem;\n","import ArticleGridItem from \"./ArticleGridItem\";\nimport {useFetchArticles} from '../hooks/useFetchArticles'\nimport {useState} from 'react'\n\nexport const ArticleGrid = () => {    \n    const {data:articles, loading} = useFetchArticles();\n\n    const first3Articles = articles.slice(0,3);\n    const moreArticles = articles.slice(3, articles.length);\n    const [showMoreArticles, setshowMoreArticles] = useState(false);\n\n    const showMore = () =>{\n        setshowMoreArticles(!showMoreArticles)\n    };\n\n    return (\n        <div>\n            { loading && <p>Loading </p> }\n\n            <div className=\"card-columns\">\n                {\n                    first3Articles.map( article => (\n                        <ArticleGridItem \n                        key={article.id}\n                        color={article.color}\n                        date={article.date}\n                        title={article.title}\n                        paragraph={article.paragraph}/>\n\n                    ))\n                }\n            </div>\n         \n            <div className=\"card-columns\">\n                {\n                    showMoreArticles  && \n                    moreArticles.map( article => (\n                        <ArticleGridItem \n                        key={article.id}\n                        color={article.color}\n                        date={article.date}\n                        title={article.title}\n                        paragraph={article.paragraph}/>\n    \n                    ))\n                }\n            </div>\n\n            {\n                !loading && !showMoreArticles &&\n                    <div className=\"row\">\n                        <div className=\"col text-center\">\n                        <   button type=\"button\" \n                                    onClick={showMore}\n                                    className=\"btn btn-outline-danger\">Read More</button>\n                        </div>\n                    </div>\n            }\n        </div>\n    )\n}","import {useState, useEffect} from 'react'\n\nexport const useFetchArticles = () => {\n    \n    const [state, setstate] = useState({\n        data: [],\n        loading: true\n    })\n\n    const getGifts =  async() => {\n        const url = `https://private-ce82ba-levotest.apiary-mock.com/items`;\n    \n        const resp = await fetch(url);\n        const {items} = await resp.json();\n        \n        return items;\n    }\n\n    useEffect(() => {\n        getGifts()\n            .then( items => setstate({\n                data: items,\n                loading: false\n            }));\n    }, []);\n\n    return state;\n}","import PropTypes from 'prop-types';\n\nconst Header = ({title, paragraph}) => {\n    return (\n        <div className=\"row mt-2\">\n            <div className=\"col\">\n                <h1 className=\"text-danger\">{ title }</h1>\n                <p>{ paragraph }</p>\n            </div>\n        </div>\n    );\n}\n\nHeader.propTypes = {\n    title: PropTypes.string.isRequired,\n    paragraph: PropTypes.string.isRequired\n}\n\nexport default Header;\n","import { ArticleGrid } from \"./components/ArticleGrid\";\nimport Header from \"./components/Header\"\n\nconst TestApp = () => {\n\n    const title = \"Related Articles\";\n    const paragraph = \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s.\";\n\n    return (\n        <div className=\"container\">\n            <Header title={title} paragraph={paragraph}/>\n            <ArticleGrid/>\n        </div>\n    );\n}\n\nexport default TestApp;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport TestApp from './TestApp';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <TestApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}